<?xml version="1.0" encoding="utf-8"?>
<!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->
<configuration>
  <appSettings>
    <!-- update these with your BotId, Microsoft App Id and your Microsoft App Password-->
    <add key="MicrosoftAppId" value="7eb788d1-3c9e-48b4-b8b2-de4dd8f99e08" />
    <add key="MicrosoftAppPassword" value="B]9ly-@SP0bj6q4:*$G*YY4dc+s" />
    <add key="QnAAuthKey" value="2e72fe45-9f6f-4832-9040-7713ac5cdc69" />
    <add key="QnAEndpointHostName" value="a20triadchatbot.azurewebsites.net" />
    <add key="QnAKnowledgebaseId" value="e3975f91-0bd3-47c8-a841-e763e47ad562" />
    <add key="QnAServiceType" value="" />
    <add key="ScmType" value="None" />
    <add key="BlobConnectionString" value="DefaultEndpointsProtocol=https;AccountName=stresschatbotstorage;AccountKey=KAT9KYWJmJzRXQ70pQCx/wFgCvDaRb4QGoQgGAoWhfTf/dUdchhOqUd5NeZ0bKXMoZ0DZE3o2cF7mJrMesJ/0w==;EndpointSuffix=core.windows.net" />
    <add key="BlobContainerName" value="blobstresscharbotstorage" />
  </appSettings>
  <system.webServer>
    <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->
    <webSocket enabled="false" />
    <handlers>
      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="index.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <!-- Do not interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^index.js\/debug[\/]?" />
        </rule>
        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}" />
        </rule>
        <!-- All other URLs are mapped to the node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="index.js" />
        </rule>
      </rules>
    </rewrite>
    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />
    <!--
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled

      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
  </system.webServer>
</configuration>
